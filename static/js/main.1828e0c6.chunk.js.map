{"version":3,"sources":["components/charts/Bar/index.js","components/Table/ValueInputRenderer.js","components/Table/index.js","modules/Table/constants.js","modules/Table/index.js","modules/section/BarChartSection.js","components/charts/Pie/index.js","modules/section/PieChartSection.js","modules/section/index.js","App.js","index.js","modules/section/styles.module.css"],"names":["BarChart","props","chartTitle","chartSubTitle","yAxisTitle","xAxisCategories","series","config","useMemo","chart","type","title","text","subtitle","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","defaultProps","ValueInputRenderer","seriesId","id","value","onChange","currentValue","setCurrentValue","useState","evt","newValue","target","parseFloat","placeholder","Styles","styled","div","Table","columns","data","className","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","style","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","TABLE_CONFIG","Header","accessor","Cell","TableSeaction","BarChartSection","React","Component","constructor","super","handleChange","this","state","setState","transformDataForTable","Array","isArray","length","each","index","label","transformSeriesForChart","seriesTitle","name","componentDidMount","styles","Bar","PieChart","plotBackgroundColor","plotBorderWidth","plotShadow","accessibility","point","valueSuffix","pie","allowPointSelect","cursor","dataLabels","enabled","format","PieChartSection","y","Pie","ChartSection","chartType","App","fetchChartDetails","fetch","then","res","json","elements","catch","chartConfigs","initialised","rootElement","document","getElementById","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.1828e0c6.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport ReactHighcharts from \"react-highcharts\";\n\nfunction BarChart(props) {\n  const {\n    chartTitle,\n    chartSubTitle,\n    yAxisTitle,\n    xAxisCategories,\n    series\n  } = props;\n\n  const config = useMemo(\n    () => ({\n      chart: {\n        type: \"column\"\n      },\n      title: {\n        text: chartTitle\n      },\n      subtitle: {\n        text: chartSubTitle\n      },\n      xAxis: {\n        categories: xAxisCategories,\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: yAxisTitle\n        }\n      },\n      tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n        footerFormat: \"</table>\",\n        shared: true,\n        useHTML: true\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0\n        }\n      },\n      series\n    }),\n    [chartTitle, chartSubTitle, yAxisTitle, xAxisCategories, series]\n  );\n\n  return <ReactHighcharts config={config} />;\n}\n\nBarChart.defaultProps = {\n  chartTitle: \"\",\n  chartSubTitle: \"\",\n  yAxisTitle: \"\",\n  xAxisCategories: [],\n  series: []\n};\n\nexport default BarChart;\n","import React, { useState } from \"react\";\n\nfunction ValueInputRenderer(props) {\n  const { seriesId, id, value, onChange } = props.value || {};\n  const [currentValue, setCurrentValue] = useState(value);\n\n  function handleChangeValue(evt) {\n    const { value: newValue } = evt.target || {};\n    setCurrentValue(newValue);\n    onChange(seriesId, id, parseFloat(newValue, 10));\n  }\n  return (\n    <input\n      type=\"text\"\n      value={currentValue}\n      onChange={handleChangeValue}\n      placeholder=\"Input...\"\n    />\n  );\n}\n\nexport default ValueInputRenderer;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport styled from \"styled-components\";\nimport ValueInputRenderer from \"./ValueInputRenderer\";\n\nconst Styles = styled.div`\n  /* This is required to make the table full-width */\n  display: block;\n  max-width: 100%;\n\n  /* This will make the table scrollable when it gets too small */\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border: 1px solid black;\n  }\n\n  table {\n    /* Make sure the inner table is always as wide as needed */\n    width: 100%;\n    border-spacing: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      /* The secret sauce */\n      /* Each cell should grow equally */\n      width: 1%;\n      /* But \"collapsed\" cells should be as small as possible */\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`;\n\nfunction Table(props) {\n  const { columns, data, className } = props;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({ columns, data });\n\n  return (\n    <Styles className={className}>\n      <div className=\"tableWrap\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...column.getHeaderProps()}\n                    style={{\n                      background: \"aliceblue\",\n                      color: \"black\",\n                      fontWeight: \"bold\"\n                    }}\n                  >\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: \"10px\"\n                        }}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Styles>\n  );\n}\n\nTable.defaultProps = {\n  columns: [],\n  data: []\n};\n\nTable.ValueInputRenderer = ValueInputRenderer;\n\nexport default Table;\n","import Table from \"../../components/Table\";\n\nexport const TABLE_CONFIG = [\n  {\n    Header: \"Label\",\n    accessor: \"label\"\n  },\n  {\n    Header: \"Value\",\n    accessor: \"value\",\n    Cell: Table.ValueInputRenderer\n  }\n];\n","import React from \"react\";\nimport Table from \"../../components/Table\";\nimport { TABLE_CONFIG } from \"./constants\";\n\nfunction TableSeaction(props) {\n  return <Table data={props.data} columns={TABLE_CONFIG} />;\n}\n\nexport default TableSeaction;\n","import React from \"react\";\nimport BarChart from \"../../components/charts/Bar\";\nimport TableSeaction from \"../Table\";\n\nimport styles from \"./styles.module.css\";\n\nclass BarChartSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartTitle: \"Chart Title\",\n      chartSubTitle: \"Chart Sub Title\",\n      yAxisTitle: \"Y Axis Title\",\n      xAxisCategories: [],\n      series: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      chartTitle,\n      chartSubTitle,\n      yAxisTitle,\n      series,\n      seriesTitle\n    } = this.props;\n    this.setState({\n      chartTitle,\n      chartSubTitle,\n      yAxisTitle,\n      xAxisCategories: series.map((each, index) => `Value ${index + 1}`),\n      seriesTitle,\n      series\n      // series: [\n      //   {\n      //     name: seriesTitle,\n      //     data: series\n      //   }\n      // ]\n    });\n  }\n\n  handleChange = (seriesId, id, value) => {\n    const series = [...this.state.series];\n    series[id] = value || 0;\n    this.setState({\n      series\n    });\n  };\n\n  transformDataForTable = () => {\n    const { series, xAxisCategories } = this.state;\n    if (Array.isArray(series) && series.length) {\n      return xAxisCategories.map((each, index) => ({\n        label: each,\n        value: {\n          seriesId: 0,\n          id: index,\n          label: each,\n          value: series[index],\n          onChange: this.handleChange\n        }\n      }));\n    }\n    return [];\n  };\n\n  transformSeriesForChart = () => {\n    const { series, seriesTitle } = this.state;\n    return [\n      {\n        name: seriesTitle,\n        data: series\n      }\n    ];\n  };\n\n  render() {\n    const {\n      chartTitle,\n      chartSubTitle,\n      yAxisTitle,\n      xAxisCategories\n    } = this.state;\n    return (\n      <div className={styles[\"section-container\"]}>\n        <div>\n          <TableSeaction data={this.transformDataForTable()} />\n        </div>\n        <div>\n          <BarChart\n            series={this.transformSeriesForChart()}\n            chartTitle={chartTitle}\n            chartSubTitle={chartSubTitle}\n            yAxisTitle={yAxisTitle}\n            xAxisCategories={xAxisCategories}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BarChartSection;\n","import React, { useMemo } from \"react\";\nimport ReactHighcharts from \"react-highcharts\";\n\n// TODO: Sample config\n// {\n//   chart: {\n//       plotBackgroundColor: null,\n//       plotBorderWidth: null,\n//       plotShadow: false,\n//       type: 'pie'\n//   },\n//   title: {\n//       text: 'Browser market shares in January, 2018'\n//   },\n//   tooltip: {\n//       pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n//   },\n//   accessibility: {\n//       point: {\n//           valueSuffix: '%'\n//       }\n//   },\n//   plotOptions: {\n//       pie: {\n//           allowPointSelect: true,\n//           cursor: 'pointer',\n//           dataLabels: {\n//               enabled: true,\n//               format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n//           }\n//       }\n//   },\n//   series: [{\n//       name: 'Brands',\n//       colorByPoint: true,\n//       data: [{\n//           name: 'Chrome',\n//           y: 61.41,\n//           sliced: true,\n//           selected: true\n//       }, {\n//           name: 'Internet Explorer',\n//           y: 11.84\n//       }, {\n//           name: 'Firefox',\n//           y: 10.85\n//       }, {\n//           name: 'Edge',\n//           y: 4.67\n//       }, {\n//           name: 'Safari',\n//           y: 4.18\n//       }, {\n//           name: 'Sogou Explorer',\n//           y: 1.64\n//       }, {\n//           name: 'Opera',\n//           y: 1.6\n//       }, {\n//           name: 'QQ',\n//           y: 1.2\n//       }, {\n//           name: 'Other',\n//           y: 2.61\n//       }]\n//   }]\n// }\n\nfunction PieChart(props) {\n  const { chartTitle, series } = props;\n\n  const config = useMemo(\n    () => ({\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: \"pie\"\n      },\n      title: {\n        text: chartTitle\n      },\n      tooltip: {\n        pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\"\n      },\n      accessibility: {\n        point: {\n          valueSuffix: \"%\"\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          dataLabels: {\n            enabled: true,\n            format: \"<b>{point.name}</b>: {point.percentage:.1f} %\"\n          }\n        }\n      },\n      series\n    }),\n    [chartTitle, series]\n  );\n\n  return <ReactHighcharts config={config} />;\n}\n\nPieChart.defaultProps = {\n  chartTitle: \"\",\n  series: []\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport PieChart from \"../../components/charts/Pie\";\nimport TableSeaction from \"../Table\";\nimport styles from \"./styles.module.css\";\n\nclass PieChartSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartTitle: \"Chart Title\",\n      chartSubTitle: \"Chart Sub Title\",\n      yAxisTitle: \"Y Axis Title\",\n      xAxisCategories: [],\n      series: []\n    };\n  }\n\n  componentDidMount() {\n    const { chartTitle, series, seriesTitle } = this.props;\n    this.setState({\n      chartTitle,\n      seriesTitle,\n      series: series.map((each, index) => ({\n        name: `Value ${index + 1}`,\n        y: each\n      }))\n    });\n  }\n\n  handleChange = (seriesId, id, value) => {\n    const series = [...this.state.series];\n    series[id].y = value || 0;\n    this.setState({\n      series\n    });\n  };\n\n  transformDataForTable = () => {\n    const { series } = this.state;\n    if (Array.isArray(series) && series.length) {\n      return series.map((each, index) => ({\n        label: each.name,\n        value: {\n          seriesId: 0,\n          id: index,\n          label: each,\n          value: each.y,\n          onChange: this.handleChange\n        }\n      }));\n    }\n    return [];\n  };\n\n  transformSeriesForChart = () => {\n    const { series, seriesTitle } = this.state;\n    return [\n      {\n        name: seriesTitle,\n        data: series\n      }\n    ];\n  };\n\n  render() {\n    const { chartTitle } = this.state;\n    return (\n      <div className={styles[\"section-container\"]}>\n        <div>\n          <TableSeaction data={this.transformDataForTable()} />\n        </div>\n        <div>\n          <PieChart\n            series={this.transformSeriesForChart()}\n            chartTitle={chartTitle}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PieChartSection;\n","import React from \"react\";\nimport BarChartSection from \"./BarChartSection\";\nimport PieChartSection from \"./PieChartSection\";\n\nclass ChartSection extends React.Component {\n  render() {\n    const { chartType } = this.props;\n    switch (chartType) {\n      case \"Bar\":\n        return <BarChartSection {...this.props} />;\n      case \"Pie\":\n        return <PieChartSection {...this.props} />;\n      default:\n        return \"Invalid chart type\";\n    }\n  }\n}\n\nexport default ChartSection;\n","import React from \"react\";\nimport ChartSection from \"./modules/section\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartConfigs: [],\n      initialised: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChartDetails().then((res) => {\n      this.setState({\n        chartConfigs: res,\n        initialised: true\n      });\n    });\n  }\n\n  fetchChartDetails = () => {\n    return fetch(\n      \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/chart2986176.json\"\n    )\n      .then((res) => res.json())\n      .then((res) =>\n        res.map((each, index) => ({\n          id: index,\n          chartType: each.type,\n          series: each.elements,\n          chartTitle: `Chart ${index + 1}`\n        }))\n      )\n      .catch((res) => []);\n  };\n\n  render() {\n    const { chartConfigs, initialised } = this.state;\n    if (!initialised) return \"loading\";\n    return (\n      <div className=\"App\">\n        {chartConfigs.map((each) => (\n          <ChartSection\n            key={each.id}\n            chartType={each.chartType}\n            series={each.series}\n            seriesTitle={each.seriesTitle}\n            chartTitle={each.chartTitle}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-container\":\"styles_section-container__ok-xB\"};"],"sourceRoot":""}